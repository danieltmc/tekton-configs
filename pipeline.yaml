apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy-pipeline-argo
  namespace: tekton-tasks
spec:
  workspaces:
    - name: git-source
      description: The git repo
    - name: manifest-source
      description: The manifest repo
    - name: git-ssh
      description: ssh key for git auth
      # secret:
      # secretName: git-ssh
  params:
    - name: gitUrl
      description: Git repository url
    - name: gitRevision
      description: Git revision to check out
      default: master
    - name: pathToContext
      description: The path to the build context, used by Kaniko - within the workspace
      default: src
    - name: imageUrl
      description: Image name including repository
    - name: imageTag
      description: Image tag
      default: 'latest'
    - name: pathToYamlFile
      description: k8s Deployment manifest
      default: 'manifest.yaml'
    - name: manifestUrl
      description: The git repo that holds the manifest
    - name: manifestRevision
      description: The git branch that holds the manifest
      default: main
  tasks:
    - name: clone-repo
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: git-source
      params:
        - name: url
          value: '$(params.gitUrl)'
        - name: revision
          value: '$(params.gitRevision)'
        - name: subdirectory
          value: '.'
        - name: deleteExisting
          value: 'true'
    - name: source-to-image
      taskRef:
        name: kaniko
      runAfter:
        - clone-repo
      workspaces:
        - name: output
          workspace: git-source
      params:
        - name: CONTEXT
          value: $(params.pathToContext)
        - name: IMAGE
          value: $(params.imageUrl):$(tasks.clone-repo.results.commit)
    - name: deploy-image
      taskRef:
        name: deploy-using-kubectl
      runAfter:
        - source-to-image
      workspaces:
        - name: output
          workspace: git-source
      params:
        - name: pathToYamlFile
          value: $(params.pathToYamlFile)
        - name: imageUrl
          value: $(params.imageUrl):$(tasks.clone-repo.results.commit)
    #- name: clone-manifest
    #  taskRef:
    #    name: git-clone
    #  runAfter:
    #    - deploy-image
    #  workspaces:
    #    - name: output
    #      workspace: manifest-source
    #  params:
    #    - name: url
    #      value: "$(params.manifestUrl)"
    #    - name: revision
    #      value: "$(params.manifestRevision)"
    #    - name: subdirectory
    #      value: "."
    #    - name: deleteExisting
    #      value: "true"
    - name: update-manifest
      taskRef:
        name: git-cli
      runAfter:
        #- clone-manifest
        - deploy-image
      workspaces:
        - name: source
          workspace: manifest-source
        - name: ssh-directory
          workspace: git-ssh
      params:
        - name: IMAGE_SHA
          value: $(tasks.clone-repo.results.commit)
